# Prototype
snippet test
    /${2:^}/.${1:TARGET}
snippet proto
	${1:class_name}.prototype.${2:method_name} =
# constructor
snippet constr
	${1:class_name}.prototype.constructor = ${1:class_name}
# Function
snippet func
	function ${1:function_name} (${2:argument}) {
		${3:// code...}
	}
# Anonymous Function
# tertiary conditional
# switch
snippet switch
	switch(${1:expression}) {
		case '${3:case}':
			${4:// code}
			break;
		${5://case...}
		default:
			${2:// code}
	}
# case
snippet case
	case '${1:case}':
		${2:// code}
		break;
	${3}
# for (...) {...}
snippet for
	for (var ${2:i} = 0; $2 < ${1:Things}.length; $2${3:++}) {
		${4:$1[$2]}
	};
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	};
# while (...) {...}
snippet wh
	while (${1:/* condition */}) {
		${2:/* code */}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
# Object Method
snippet :f
	${1:method_name}: function(${2:attribute}) {
		${4}
	}${3:,}
# setTimeout function
snippet settime 
	setTimeout(${2:function},${1:time};
snippet setinter
	setInterval(${2:function},${1:time});
# Get Elements
snippet get
	getElementsBy${1:TagName}('${2}')${3}
# Get Element
snippet gett
	getElementBy${1:Id}('${2}')${3}
snippet getid
	getElementById('${1:id}')
snippet dcid
	document.getElementById('${1:id}')
snippet rep
	replace(${1:reg},${2:replacestring});
snippet module
	var module = function(){
		function f(){
			${2://code}
		}
		return {
			init : function(){
				${1://code}
			}
		}
	}();
snippet a
	alert(${1});
snippet class
	var ClassName = function(a, b){
		/* public variable */
		this.a = '' || a;
		this.b = '' || b;
		/* private variables */
		var x = '';
		var y = ''
		/* public methods */
		this.pu = function(){
			this.a = a;
			tihs.b = b;
		}
		/* variable */
		var pr = function(){
			${1://code}
		}
	}
# jQuery
snippet jqplug
	;(function($){
		$.fn.pluginName = function(opt) {
			var defaults = {
				${1://def values}
			};
			var opt = $.extend(defaults,opt);
			return this.each(function() {
				${2:_this} = $(this);
				${3://code}
			});
		};
	})(jQuery);
snippet jqajax
	$.ajax({
		type: '${1:get}',
		url : '',
		dataType:'${2:json}',
		data: 'rand=1',
		success : function(msg){
			${4://code}
		},
		error : function(msg){
			${3://fun}
		}
	});
snippet log
	console.log(${1:str});
snippet con
	console.
snippet debug
	console.debug(${1:str});
snippet con_info
	console.info(${1:str});
snippet con_warn
	console.warn(${1:str});
snippet con_error
	console.error(${1:str});
snippet con_log
	console.log(${1:str});
snippet con_group
	console.group(${1:firstgroup});
		console.log(${2:str});
		console.log(${3:str});
	console.groupEnd();
snippet con_dir
	console.dir(${1:obj});
snippet con_dirxml
	console.dirxml(${1:tableobj});
snippet con_trace
	console.trace(${1:fun});
snippet con_time
	console.time(${1:str});
		(${2:code})
	console.timeEnd();
snippet con_profile
	console.profile(${1:str})
		(${2:code})
	console.profileEnd();
snippet dw
	document.write('${1:str}');
# defined by imiku.com
snippet set_setTimeout
	setTimeout(${1:fun},${2:time});
snippet set_setInterval
	setInterval(${1:fun},${2:time});
snippet clear_Interval
	clearInterval(${1:obj});
snippet clear_Timeout
	clearTimeout(${1:obj});
#object && class
snippet createclass
	/*创建一个类对象*/
	function ${1:Classname}(${2:param1}){
		${2:param1} = ${3:value};
		//.....
	}
	${1:Classname}.prototype.${4:value} = ${5:value};
	var ${2:new_object} = new ${1:Classname}();
snippet extendclass
	/*通用继承类方法*/
	function object(o) {
		function F() {}
		F.prototype = o;
		return new F();
	}
	var child = object(Parant);
snippet extendclass2
	/*直接使用prototype继承,创建父对象为空*/
	function ${1:Parentclass}(){}
	/*通过定义prototype继续*/
	${1:Parentclass}.prototype.species = "动物";
	/*通用做法*/
	${2:Childclass}.prototype = ${1:Parentclass}.prototype;
	${2:Childclass}.prototype.constructor = ${2:Childclass};
	var ${3:object} = new ${2:Childclass}(${4:value});
snippet extendclass3
	function extendfunc(${2:Childclass},${1:Parentclass}){
		/*利用空对象继承封装*/
		var F = function(){};
		F.prototype = ${1:Parentclass}.prototype;
		${2:Childclass}.prototype = new F();
		//${2:Childclass}.prototype.constructor = ${2:Childclass};
		${2:Childclass}.uber = ${1:Parentclass}.prototype;
	}
	extend(Cat,Animal);
snippet extendclass4
	/*拷贝继承*/
	function extendfunc(${2:Childclass}, ${1:Parentclass}) {
		var p = ${1:Parentclass}.prototype;
		var c = ${2:Childclass}.prototype;
		for (var i in p) {
			c[i] = p[i];
		}
		c.uber = p;
	}
snippet extendclass5
	/*浅拷贝*/
	function extendCopy(${1:Parentclass}) {
		var c = {};
		for (var i in ${1:Parentclass}) { 
			c[i] = ${1:Parentclass}[i];
		}
		c.uber = ${1:Parentclass};
		return c;
	}
snippet extendclass6
	/*深拷贝*/
	function deepCopy(${1:Parentclass}, c) {
		c = c || {};
		for (var i in ${1:Parentclass}) {
			if (typeof ${1:Parentclass}[i] === 'object') {
				c[i] = (${1:Parentclass}[i].constructor === Array) ? [] : {};
				deepCopy(${1:Parentclass}[i], c[i]);
			} else {
				c[i] = ${1:Parentclass}[i];
			}
		}
		return c;
	}
snippet constrclass1
	/*使用apply()将父对象的构造函数绑定在子对象继承*/
	function ${1:ChildClass}(${4:param}){
		${2:ParentClass}.apply(this, arguments);
		this.${4:param} = ${5:value};
		//...
	}
	var ${3:object} = new ${1:ChildClass}();
snippet constrclass2
	/*使用prototype模式构造函数并继承*/
	${1:Childclass}.prototype = new ${2:Parentclass}();
	/*重置了prototype,使里面的属性constructor删除了，需要重置*/
	${1:Childclass}.prototype.constructor = ${1:Childclass};
	var ${3:object}= new ${1:Childclass}(${4:value});
snippet getjsonp
	var getjsonp = function(){
		var script = document.createElement('script');
		script.setAttribute("type", "text/javascript");
		script.setAttribute('src', url);
		script.setAttribute("id", "jsondata");
		document.getElementsByTagName('head')[0].appendChild(script); 
	};
snippet jssx
	window.location.reload();
snippet jsxzevent
	document.window.onorientationchange = function(){};
snippet jsbodyfontsize
	var style = document.body.currentStyle || document.defaultView.getComputedStyle(document.body, '')
	console.log(style.fontSize);
snippet jqjsonp
	$.ajax({
		type: "get",
		async: false,
		url: "",
		dataType: "jsonp",
		data:"",
			jsonp: "callback",//传递给请求处理程序或页面的，用以获得jsonp回调函数名的参数名(一般默认为:callback)
		jsonpCallback:"getinfo",//自定义的jsonp回调函数名称，默认为jQuery自动生成的随机函数名，也可以写"?"，jQuery会自动为你处理数据
		success: function(json){
			//
		},
		error: function(){
			//
		}
	});
# usefull func list
snippet randxy
	Math.floor(Math.max(min, Math.random() * (max + 1)));
snippet apgetbid
	//获取宝宝号
	var bid = Cookies.get('b');
	if (bid === null || bid.length <= 0) {
		checkloginNew("", 0);
		return false;
	} else {
		bid = parseInt(bid, 10);
	}
snippet unixtime
	Math.round(new Date().getTime() / 1000);
snippet isie 
	var ISIE = !! window.ActiveXObject;
	var ISIE6 = ISIE && ! window.XMLHttpRequest;
snippet jsdiv
	var ${1:popDiv} = document.createElement("div");
	${2:$1}.id = "${7:id}";
	${3:$1}.className = "${8:className}";
	${4:$1}.setAttribute("${9:attr}","${10:value}");
	${11:$1}.height = 0;
	${5:$1}.style.cssText = ["position:absolute", "display:block"].join(";");
	document.body.appendChild(${6:$1});
snippet jsdivs
	var arrText=["1","2","3","4","5","6","7","8","9","10"];
	var oFrag=document.createDocumentFragment();//创建页面碎片
	for(var i=0;i<arrText.length;i++){
		var op=document.createElement("P");
		var oText=document.createTextNode(arrText[i]);
		op.appendChild(oText);
		oFrag.appendChild(op);
	}
	document.body.appendChild(oFrag);
snippet jsscript
    (function() {
         var ${1:s} = document.createElement('script');
         ${2:$1}.type = 'text/javascript';
         ${3:$1}.async = true;
         ${4:$1}.src = ${6:('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js'};
         var el = document.getElementsByTagName('script')[0];
         el.parentNode.insertBefore(${5:$1}, el);
     })();
snippet jsscripts
    (function() {
        var el = document.getElementById("mod_stat"),
        oFrag = document.createDocumentFragment(),
        _bdhmProtocol = (("https:" == document.location.protocol) ? "https://" : "http://"),
        frags = [];
        _bdhmProtocol += "hm.baidu.com/h.js%3Fed3eae6589b7343c267cb8191d83a284";
        _bdhmProtocol = unescape(_bdhmProtocol);
        frags = ["http://s10.cnzz.com/stat.php?id=1947335&web_id=1947335","http://tajs.qq.com/stats?sId=15811003",_bdhmProtocol];
        if(el){
            for(var i = 0;i < frags.length; i++){
                var s = document.createElement("script");
                s.type = 'text/javascript';
                s.async = true;
                s.src = frags[i];
                oFrag.appendChild(s);
            }
            el.appendChild(oFrag);
        }
     })();
snippet jsdivbnb
	var subElem = document.create('div'),
	elem = document.getElementById('animated');
	elem.style.display = 'none';//先隐藏
	elem.appendChild(subElem);
	elem.style.width = '320px';
	elem.style.height = '480px';
	elem.style.display = 'block';//再显示
snippet jsdivclone
	var tmpnode = document.getElementById('container'),
	clone = tmpnode.cloneNode(true),
	list = ['foo','bar','baz'],elem,contents;
	clone.setAttribute('width','50%');
	for(var i = 0; i<list.length; i++){
		elem = document.createElement('div');
		content = document.createTextNode(list[i]);
		clone.appendChild(elem);
	}
	original.parentNode.replaceChild(clone,original);
snippet htmlcode
	/*
	 *html文本格式化解码
	 *==================
	 */
	function HTMLDECODE(str) {
		str = str || "";
		if (str === "" || str.length === 0) {
			return '';
		}
		str = str.replace(/&gt;/g, ">");
		str = str.replace(/&lt;/g, "<");
		str = str.replace(/&#047;/g, '/');
		str = str.replace(/&#039;/g, "'");
		str = str.replace(/&quot;/g, '"');
		str = str.replace(/&nbsp;/g, " ");
		str = str.replace(/&amp;/g, "&");
		return str;
	}
	/*
	 *html文本格式化解码
	 *==================
	 */
	function HTMLENCODE(str) {
		str = str || "";
		if (str === "" || str.length === 0) {
			return '';
		}
		str = str.replace(/>/g, "&gt;");
		str = str.replace(/</g, "&lt;");
		str = str.replace(/\//g, '&#047;');
		str = str.replace(/'/g, "&#039;");
		str = str.replace(/"/g, '&quot;');
		str = str.replace(/\s| /g, "&nbsp;");
		str = str.replace(/&/g, "&amp;");
		return str;
	}
snippet jqscroll
	/**
	 * 文字滚动
	 * lh 行高, speed 速度, delay 间隔时间, id 容器id
	 */
	function startmarquee(lh,speed,delay,id){
		var t; //定时器
		var p=false; //初始化为允许滚动状态
		var o=document.getElementById(id);   //获取容器
		$('#'+id).attr('run','1');
		o.innerHTML+=o.innerHTML; 
		o.onmouseover=function(){p=true;}; 
		o.onmouseout=function(){p=false;};
		o.scrollTop = 0; //初始化滚动高度
		function start()
		{ 
			t=setInterval(scrolling,speed); 
			if(!p) o.scrollTop += 2;
		}
		function scrolling()
		{ 
			if(o.scrollTop%lh!==0){ 
				o.scrollTop += 2;
				if(o.scrollTop>=o.scrollHeight/2) o.scrollTop = 0;
			}else{
				clearInterval(t); 
				setTimeout(start,delay);
			}
		}
		setTimeout(start,delay); 
	}
snippet randint
	//随机min-max之间的正整数
	var RANDOMXY = function(min, max) {
		return Math.floor(Math.max(min, Math.random() * (max + 1)));
	};

# appcan UEX
snippet uexwc
	uexWindow.closeToast();
snippet uexwt
	uexWindow.toast(${1:1},${2:5},${3:string},${4:time});
snippet zytouch 
	function zy_touch(class, func){
	　　var t = event.currentTarget;
	　　if (!t.zTouch) {
	　　　　t.zTouch = new zyClick(t, func, class);
	　　　　t.zTouch._touchStart(event);
	　　}
	} 

snippet uexss
	$$("${1:obj_id}").gesture = new zyEvent("${1:obj_id}", function(me, dx, dy) { 
		//移动过程中事件
	},
	function(me, dx, dy, t) { 
		//手指松开后事件
		if (t == "right") zy_anim_push(me, "a-mr");
	},
	false, function(e){
		//对象动画结束事件,后面的loadmaincon()是主窗口root的函数
		uexWindow.evaluateScript("root", "0", "loadmaincon()");
	});
snippet uexjsonp
	var xmlHttp = function() {
		uexXmlHttpMgr.open("1", "GET", url, "");
		uexXmlHttpMgr.send("1");
	};
	var successCB = function(opid, stauts, result) {
		if (parseInt(stauts, 10) === 1) {
			result = JSON.parse(result);
			uexXmlHttpMgr.close("1");
			//code
			//
			uexWindow.closeToast();
		}else if(parseInt(stauts, 10) === 0){
			//加载中
		}else if(parseInt(stauts, 10) === -1){
			//加载出错
		}
	};
	uexXmlHttpMgr.onData = successCB;
	uexWidgetOne.cbError = function(opCode, errorCode, errorInfo) {
		uexWindow.toast(0, "5", "数据加载出错", 5000);
	};
	xmlHttp();
snippet jsreg
	var param1 = "^"+param1;
	var re = new RegExp(${1:param1}, "gi");
	re.test(${2:param2})
snippet jszw
	//JavaScript
	if(escape(str).indexOf("%u") < 0){}
snippet isarray
	Object.prototype.toString.call(key)==='[object Array]'
snippet isarr
	${1:Object} instanceof Array
snippet jsclass
	;(function(){
		 var ${1:ClassName} = function(name,age,opt){
			 if(!(this instanceof Dog)){
				 return new Dog(name,age);
			 }
			 this.name = name;
			 this.age = age;
			 this.setOpt(opt || {});
		 };
		 ${2:$1}.prototype={
			setOpt:function(opt){
				var fun = function(){};
				this.opt = {
					width : 447,
					height : 228,
					id : 'pop_dialog',
					cls : 'pop_dialog',
					content :'',    
					overlay : true,
					afterShow : fun
				};
				for (var property in opt) {
					this.opt[property] = opt[property];
				}
			},
			getName:function(){
				console.log(this.name);
				return this;
			},
			getAge:function(){
				console.log(this.age);
				return this;
			}
		};
		return (window.${3:$1} = ${4:$1});
	})();
	//${4:$1}("旺旺",3).getName().getAge();
snippet jsaddevent1
	var addEvent = (function () {
		if (document.addEventListener) {
			return function (type, element, fun) {
				element.addEventListener(type, fun, false);
			};
		}
		else if (document.attachEvent) {
			return function (type, element, fun) {
				element.attachEvent('on' + type, fun);
			};
		}
		else {
			return function (type, element, fun) {
				element['on' + type] = fun;
			};
		}
	})();
snippet jsaddevent
	function addEvent(type, element, fun) {
		if (element.addEventListener) {
			addEvent = function(type, element, fun) {
				element.addEventListener(type, fun, false);
			};
		}
		else if (element.attachEvent) {
			addEvent = function(type, element, fun) {
				element.attachEvent('on' + type, fun);
			};
		}
		else {
			addEvent = function(type, element, fun) {
				element['on' + type] = fun;
			};
		}
		return addEvent(type, element, fun);
	}
snippet jsajax
	/**
	 * ajax
	 * @name ajax
	 * @function
	 * @param { String } method 请求方法[post|get]
	 * @param { String } url 请求地址
	 * @param { Boolean } async 是否异步请求(可选)
	 * @param { String | Object } args 请求参数(可选)
	 * @param { Function } callback 回调函数(可选)
	 * @param { Function } error 请求页面出错时的回调函数(可选)
	 * @param { String } docType 返回文档格式(可选)
	 */
	function ajax(method, url, async, args, callback, error, docType){
		var params = args;
		async = async == null ? true: async;
		if (args) {
			if (typeof args === "object") {
				var str = "";
				for (var i in args) {
					str += i + "=" + args[i] + "&";
				}
				params = str.substr(0, str.length - 1);
			}
		}

		method = method ? method.toUpperCase() : "POST";
		docType = docType ? docType: "text";
		var XMLHttp = null;
		if (window.XMLHttpRequest && !(window.ActiveXObject)) {
			XMLHttp = new XMLHttpRequest();
		} else if (window.ActiveXObject) {
			try {
				XMLHttp = new ActiveXObject("Microsoft.XMLHTTP");
			} catch(otherMSIE) {
				try {
					XMLHttp = new ActiveXObject("Msxml2.XMLHTTP");
				} catch(NoSupport) {
					XMLHttp = null;
				}
			}
		}

		XMLHttp.onreadystatechange = function() {
			if (XMLHttp.readyState == 4) {
				if (XMLHttp.status == 200 || XMLHttp.status == 0) {
					var param = null;
					switch (docType) {
					case "xml":
						param = XMLHttp.responseXML;
						break;
					case "json":
						param = Kg.JSON.parse(XMLHttp.responseText);
						break;
					default:
						param = XMLHttp.responseText;
					}
					callback && callback(param, XMLHttp);
					XMLHttp = null;
				} else {
					error && error();
				}
			}
		};

		if (method == "GET") {
			if (url.indexOf("?") != -1) {
				XMLHttp.open(method, url + (params ? ("&" + params) : ''), async);
			} else {
				XMLHttp.open(method, url + (params ? ("?" + params) : ''), async);
			}
			XMLHttp.send(null);
		} else {
			XMLHttp.open(method, url, async);
			XMLHttp.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
			XMLHttp.send(params);
		}
		return XMLHttp;
	}

snippet jsjsonp
	/**
	 * loadScript
	 * @name loadScript
	 * @function
	 * @param { String } url 请求地址
	 * @param { String | Object } args 请求参数(可选)
	 * @param { Function } callback 回调函数(可选)
	 */
	function loadScript(url, args, callback) {
		var params = args || "";
		if (args && (typeof args === "object")) {
			var str = "";
			for(var i in args){
				str += i + "=" + args[i] + "&";
			}
			params = str.substr(0, str.length - 1);
		};
		var script = document.createElement("script");
		script.type = 'text/javascript';
		if(/\?/g.test(url) && params === ""){
			script.src = url + "?" + params;
		}else{
			script.src = url;
		}
		script.onload = script.onreadystatechange = function() {
			if (!this.readyState || (this.readyState == "complete" || this.readyState == "loaded")) {
				callback && callback();
				script.onreadystatechange = script.onload = null;
				script = null;
			}
		};
		document.getElementsByTagName("head")[0].appendChild(script);
	}
snippet jsinter
	/**
	 * intercept
	 * @name intercept
	 * @function
	 * @param { Number } length 显示的长度
	 * @param { String } appendStr 截取的长度
	 */
	String.prototype.intercept = function(length, appendStr){
		var str = this;
		str = str.trim();
		if(str.getBytes() < length) {
			return str;
		}
		var countLen = 0;
		var charCount = 0;
		if (appendStr.length > 0) {
			length = length - appendStr.length;
		}
		for(var i = 0; i < str.length; i++){
			if (this.charCodeAt(i) > 256){
				countLen += 2;
			}else{
				countLen += 1;
			}
			if(countLen > length){
				break;
			}
			charCount++;
		}
		return str.substr(0, charCount) + appendStr;
	};
snippet jstrim
	String.prototype.trim = function(){
		return this.replace(/^(\s|\u3000)*|(\s|\u3000)*$/g,"");
	};
snippet jsua
	var UA =  {
		Ie: !!document.all,
		Ie6: !!document.all && !window.XMLHttpRequest,
		Ie7: !!document.all && /msie 7.0/gi.test(window.navigator.appVersion),
		Ie8: !!document.all && /msie 8.0/gi.test(window.navigator.appVersion),
		FF: /firefox/gi.test(window.navigator.userAgent),
		Opera: /opera/gi.test(window.navigator.userAgent),
		Chrom: /Chrom/gi.test(window.navigator.userAgent),
		Maxthon: /Maxthon/gi.test(window.navigator.userAgent)
	}
snippet jsextend
	/**
	 * 继承对象（复制属性/方法）
	 * @id extend
	 * @param {Object} 被复制对象（子对象）
	 * @param {Object} 复制对象（父对象）
	 * @param {Boolean}  是否重写属性/方法
	 * @return {Object} 返回被复制对象（子对象）
	 */
	function extend(target, souce, rewrite) {
		for (var property in souce) {
			if (rewrite) target[property] = souce[property];
			else if (!target[property]) target[property] = souce[property];
		}
		return target;
	}
snippet getxy
	/**
	 * 获取HTMLElement对象与窗口边界的距离
	 * @id getXY
	 * @param {Object} Dom对象
	 * @return {Object} 返回HTMLElement对象四边与窗口边界的距离
	 */
	function getXY(dom) {
		el = dom;
		var bodySize = getBodySize();
		var elRect = el.getBoundingClientRect();
		return {
			left: bodySize.sL + elRect.left,
			right: bodySize.sL + elRect.right,
			top: bodySize.sT + elRect.top,
			bottom: bodySize.sT + elRect.bottom
		};
	}
	/**
	 * 获取页面可视宽、高、滚动全高、滚动全宽、滚动高、滚动宽
	 * @id getBodySize
	 * @return {Object} 页面宽度值、高度值、滚动全高度值、滚动全宽度值、滚动高值、滚动宽值
	 */
	function getBodySize() {
		if (document.compatMode == "BackCompat") {
			var clientH = document.body.clientHeight;
			var clientW = document.body.clientWidth;
			var scrollH = document.body.scrollHeight;
			var scrollW = document.body.scrollWidth;
			var scrollT = document.body.scrollTop;
			var scrollL = document.body.scrollLeft;
		} else if (document.compatMode == "CSS1Compat") {
			var clientH = document.documentElement.clientHeight;
			var clientW = document.documentElement.clientWidth;
			var scrollH = document.documentElement.scrollHeight;
			var scrollW = document.documentElement.scrollWidth;
			var scrollT = document.body.scrollTop || document.documentElement.scrollTop;
			var scrollL = document.body.scrollLeft || document.documentElement.scrollLeft;
		}
		return {
			cH: clientH,
			cW: clientW,
			sH: scrollH,
			sW: scrollW,
			sT: scrollT,
			sL: scrollL
		};
	}
snippet getbodysize
	/**
	 * 获取页面可视宽、高、滚动全高、滚动全宽、滚动高、滚动宽
	 * @id getBodySize
	 * @return {Object} 页面宽度值、高度值、滚动全高度值、滚动全宽度值、滚动高值、滚动宽值
	 */
	function getBodySize() {
		if (document.compatMode == "BackCompat") {
			var clientH = document.body.clientHeight;
			var clientW = document.body.clientWidth;
			var scrollH = document.body.scrollHeight;
			var scrollW = document.body.scrollWidth;
			var scrollT = document.body.scrollTop;
			var scrollL = document.body.scrollLeft;
		} else if (document.compatMode == "CSS1Compat") {
			var clientH = document.documentElement.clientHeight;
			var clientW = document.documentElement.clientWidth;
			var scrollH = document.documentElement.scrollHeight;
			var scrollW = document.documentElement.scrollWidth;
			var scrollT = document.body.scrollTop || document.documentElement.scrollTop;
			var scrollL = document.body.scrollLeft || document.documentElement.scrollLeft;
		}
		return {
			cH: clientH,
			cW: clientW,
			sH: scrollH,
			sW: scrollW,
			sT: scrollT,
			sL: scrollL
		};
	}
snippet ie6cache
	/*
	 *针对ie6背景图片缓存
	 */
	try{
		var userAgent = navigator.userAgent.toLowerCase();
		var env = null;
		var ver = 0;
		env = userAgent.match(/msie ([\d.]+)/);ver = env ? parseInt(env[1], 10) : 0;
		if(ver == 6){
			try{ 
				document.execCommand("BackgroundImageCache", false, true);
			}catch(e){}
		}
	}catch(e){}
snippet stope
	/**
	 * 停止事件冒泡
	 * @id stopEvent
	 * @param {Object} Event对象
	 */
	function stopEvent(event) {
		event = window.event || event;
		if (event.stopPropagation) {
			event.stopPropagation();
		} else {
			event.cancelBubble = true;
		}
	}
snippet jsgetreq
	function getRequest(){
		var url = location.search; //获取url中"?"符后的字串
		var theRequest = new Object();
		if (url.indexOf("?") != -1) {
			var str = url.substr(1);
			strs = str.split("&");
			for(var i = 0; i < strs.length; i ++) {
				theRequest[strs[i].split("=")[0]]=strs[i].split("=")[1];
			}
		}
		return theRequest;
	}
snippet stopb
    //非默认
    if(e.stopPropagation){
        e.stopPropagation();
    } else{
        e.cancelBubble = true;
    }
   //默认
   if(e.preventDefault){
       e.preventDefault();
   }else{
       e.returnValue = false;
   }
# FOR KUGOU
snippet kgajax
	Kg.Ajax("post", "${1:url}", true, "${2:a=10&b=20}", ${3:callback}, ${4:error}, "json");
snippet kggbs
	var o = Kg.getBodySize();
snippet kggs
	Kg.getStyle(${1:dom}, "${2:font-size}");  
snippet kggxy
	Kg.getXY(${1:dom});
snippet kgadde
	Kg.$("${1:dom}").addEvent("${2:click}", function(){
		${3:code}
	});
snippet kgpost
	Kg.post("${1:url}", ${2:{"name":"kugou"}}, ${3:callback});
snippet kggetjson
	Kg.getJSON("${1:url}", ${2:{"name":"kugou"}}, ${3:callback});
snippet kglit
	{literal}
		${1:""}
	{/literal}
snippet kgtj
		/**
		 * 通用统计
		 * @param { Number || Array }
		 * @param { String }
		 */
		function sdnClick(key,type){
			if(!key){return;}
			var src = (new Date()).getTime();

			//判断是否为数组
			if(Object.prototype.toString.call(key)==='[object Array]'){
				for(var i=0,l=key.length;i<l;i++){
					src = (new Date()).getTime();
					switch(type){
						case "aspx": src = 'http://sdn.kugou.com/link.aspx?id=' + key[i] + '&url=&t=' + src; break;
						case "php":
						default:  src = 'http://tj.kugou.com/front/link.php?id=' + key[i] + '&url=&t=' + src; break;
					};
					(new Image()).src = src;
				}
			}else{
				switch(type){
					case "aspx": src = 'http://sdn.kugou.com/link.aspx?id=' + key + '&url=&t=' + src; break;
					case "php":
					default:  src = 'http://tj.kugou.com/front/link.php?id=' + key + '&url=&t=' + src; break;
				};
				(new Image()).src = src;
			}
		}
snippet kgplay
	/*{"Hash":"F612BF97F642D60F4C81B66910F94B7D", "FileName":"筷子兄弟", "timeLen":"291"},{"Hash":"28CFEB81BF1CA25FC463C2F099A28A27", "FileName":"陈奕迅", "timeLen":"211"}*/
	function play(data){
		var files = "";
		var counter = 0;

		for(var j = 0; j < data.length;j++){
			if(data[j].sid == oid){
				if(files.length > 0){
					files += ",";
				}
				var fn = data[j].singername;
				if(fn.indexOf("】") > -1 && fn.trim().indexOf("】") != fn.trim().length-1){
					fn = fn.substring(fn.indexOf("】")+1);
				}
				
				var json = '{"Hash":"' + data[j].hash + '", "FileName":"' + fn +  '", "timeLen":"' + (data[j].duration/1000) + '"}';
				files += json;

				counter = counter + 1;
			}
		}

		if(files.length > 0){
			try{
				KgWebSuperCall.playSongs('[' + files + ']', 'yueku_omnibus');
			}catch(exp){}
		}
	}
snippet kgsharealbum
	/**
	 * 分享
	 * @name shareAlbum
	 * @param { String } 分享渠道
	 * @param { Number } 精选辑id
	 */
	function shareAlbum(chl, id){
		var el = Kg.$C("s_" + id)[0];
		//专辑名
		var name = Kg.$T("a", el)[0].title;
		//分享图片
		var img = Kg.$T("img", el)[0].getAttribute("_src");
		//简介
		var intro = Kg.$C("text",el)[0].innerHTML;
		img = img.match(/\b\d+\.\w+$/);
		openShareAlbum(chl, name, id, img, "special", intro);
	}

	//存在于base.js中
	function openShareAlbum(chl, name, id, pic, type, intro){
		var url = "http://www.kugou.com/interface/fromsoft/?action=share&microblog=1";
		url += "&plat=" + chl;
		url += "&name=" + encodeURI(name);
		url += "&id=" + id;
		url += "&pic=" + pic;
		url += "&share_type=" + type;
		url += "&intro=" + encodeURI(intro);
		window.open(url);
	}
snippet jsfloat
	//侧栏浮动
	function initSideFloat(){
		var dc = document,
		//距离底部的高度
		bottomDistance = 100,
		isIE6 = (function(){
			if(window.XMLHttpRequest){
				return false;
			}else{
				return true;
			}
		})(),
		sidefloat = dc.createElement("div");
		sidefloat.className = "side_float";
		sidefloat.innerHTML = [
			'<a href="javascript:;" class="s1" title="">回到顶部</a>',
			'<a href="http://www.kugou.com/kf/user/app/" target="_blank" class="s2" title="意见反馈">意见反馈</a>'
		].join("");
		dc.body.appendChild(sidefloat);
		if(isIE6){
			sidefloat.style.bottom = "auto";
			fixHandle();
			window.onscroll = function(){
				fixHandle();
			};
			window.onresize = function(){
				fixHandle();
			};
			function fixHandle(){
				sidefloat.style.top = (dc.body.scrollTop||dc.documentElement.scrollTop) + dc.documentElement.clientHeight - bottomDistance + "px";
			}
		} else{
			sidefloat.style.bottom = bottomDistance + "px";
		}
		//回到顶部
		function scrollToTop(){
			var scrollTop = dc.documentElement.scrollTop || dc.body.scrollTop;
			var iSpeed = Math.floor((-scrollTop)/2);
			if(scrollTop <= 0){
				return;
			}
			document.documentElement.scrollTop = document.body.scrollTop = scrollTop + iSpeed;
			setTimeout(arguments.callee,50);
		}
		//绑定事件
		sidefloat.children[0].onclick = scrollToTop;
	}
snippet jsweixin
    /*分享到朋友圈参数*/
    var dataForWeixin = {
        appId: "",
        msgImg: "${1:http://www.wfeel.com/}",
        url: location.href,
        title: document.title,
        desc: "",
        fakeid: "",
        callback: function() {}
    };
    (function() {
        var onBridgeReady = function() {
            /*分享到朋友圈*/
            WeixinJSBridge.on('menu:share:appmessage', function(argv) {
                WeixinJSBridge.invoke('sendAppMessage', {
                    "appid": dataForWeixin.appId,
                    "img_url": dataForWeixin.msgImg,
                    "img_width": "120",
                    "img_height": "120",
                    "link": dataForWeixin.url,
                    "desc": dataForWeixin.desc,
                    "title": dataForWeixin.title
                },
                function(res) { 
                    (dataForWeixin.callback)();
                });
            });
        };
        // 当微信内置浏览器完成内部初始化后会触发WeixinJSBridgeReady事件。
        if (document.addEventListener) {
            document.addEventListener('WeixinJSBridgeReady', onBridgeReady, false);
        } else if (document.attachEvent) {
            document.attachEvent('WeixinJSBridgeReady', onBridgeReady);
            document.attachEvent('onWeixinJSBridgeReady', onBridgeReady);
        }
    })();
snippet jsaudiobind
    audio.addEventListener("loadstart", function(){});
    audio.addEventListener("durationchange", function(){});
    audio.addEventListener("loadedmetadata", function(){});
    audio.addEventListener("loadeddata", function(){});
    audio.addEventListener("progress", function(){});
    audio.addEventListener("canplay", function(){});
    audio.addEventListener("canplaythrough", function(){});
snippet jsvideobind
    audio.addEventListener("loadstart", function(){});
    audio.addEventListener("durationchange", function(){});
    audio.addEventListener("loadedmetadata", function(){});
    audio.addEventListener("loadeddata", function(){});
    audio.addEventListener("progress", function(){});
    audio.addEventListener("canplay", function(){});
    audio.addEventListener("canplaythrough", function(){});
snippet canvas
	var canvas = document.getElementById("${1}");
	var context = canvas.getContext("2d");
	context.fillStyle="#FF0000";//填充颜色
	context.fillRect(0,0,150,75); //开始位置x,y,宽高width,height

	/*
	   context.moveTo(10,10);//开始画线位置x,y
	   context.lineTo(150,50);//移动位置
	   context.lineTo(10,50);
	   context.stroke();//处理

	   context.drawImage(img,sx,sy,swidth,sheight,x,y,width,height);

	   var base64 = canvas.toDataURL("image/png")); 
	 */
snippet kgjsonp
	Kg.Ajax({
		docType : "jsonp",
		method : "get", 
		url : "",
		callbackFuncName : "",
		args : metadata,
		callback : function(res){
			console.log(res);
		},
		error : function(){}
	});
