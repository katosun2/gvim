!_TAG_FILE_FORMAT	2	/extended format/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Patrick Walton	/pwalton@mozilla.com/
!_TAG_PROGRAM_NAME	jsctags	//
!_TAG_PROGRAM_URL	http://github.com/pcwalton/jsctags	/GitHub repository/
!_TAG_PROGRAM_VERSION	0.1	//
checkNumber	raytrace.js	/^var checkNumber;$/;"	v	lineno:13	type:number
Class	raytrace.js	/^var Class = {$/;"	v	lineno:28	type:Object
create	raytrace.js	/^  create: function() {$/;"	f	lineno:29	type:undefined function() function()
%anonymous_function	raytrace.js	/^    return function() {$/;"	f	lineno:30	type:undefined function()
extend	raytrace.js	/^Object.extend = function(destination, source) {$/;"	f	lineno:37	type:Object function(Object, Object)
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:69	type:any
initialize	raytrace.js	/^    initialize : function(r, g, b) {$/;"	f	lineno:79	type:void function(any, any, any)
add	raytrace.js	/^    add : function(c1, c2){$/;"	f	lineno:89	type:Object function(Object, Object)
addScalar	raytrace.js	/^    addScalar: function(c1, s){$/;"	f	lineno:99	type:Object function(Object, number)
subtract	raytrace.js	/^    subtract: function(c1, c2){$/;"	f	lineno:111	type:Object function(Object, Object)
multiply	raytrace.js	/^    multiply : function(c1, c2) {$/;"	f	lineno:121	type:Object function(Object, Object)
multiplyScalar	raytrace.js	/^    multiplyScalar : function(c1, f) {$/;"	f	lineno:131	type:Object function(<undefined | null | Object>, number)
divideFactor	raytrace.js	/^    divideFactor : function(c1, f) {$/;"	f	lineno:141	type:Object function(any, any)
limit	raytrace.js	/^    limit: function(){$/;"	f	lineno:151	type:void function()
distance	raytrace.js	/^    distance : function(color) {$/;"	f	lineno:157	type:number function(any)
blend	raytrace.js	/^    blend: function(c1, c2, w){$/;"	f	lineno:162	type:Object function(Object, Object, any)
brightness	raytrace.js	/^    brightness : function() {$/;"	f	lineno:171	type:number function()
toString	raytrace.js	/^    toString : function () {$/;"	f	lineno:178	type:string function()
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:187	type:any
initialize	raytrace.js	/^    initialize : function(pos, color, intensity) {$/;"	f	lineno:197	type:void function(any, any, any)
toString	raytrace.js	/^    toString : function () {$/;"	f	lineno:203	type:string function()
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:208	type:any
initialize	raytrace.js	/^    initialize : function(x, y, z) {$/;"	f	lineno:218	type:void function(any, any, any)
copy	raytrace.js	/^    copy: function(vector){$/;"	f	lineno:224	type:void function(any)
normalize	raytrace.js	/^    normalize : function() {$/;"	f	lineno:230	type:Object function()
magnitude	raytrace.js	/^    magnitude : function() {$/;"	f	lineno:235	type:number function()
cross	raytrace.js	/^    cross : function(w) {$/;"	f	lineno:239	type:Object function(any)
dot	raytrace.js	/^    dot : function(w) {$/;"	f	lineno:246	type:number function(<undefined | null | Object>)
add	raytrace.js	/^    add : function(v, w) {$/;"	f	lineno:250	type:Object function(Object, Object)
subtract	raytrace.js	/^    subtract : function(v, w) {$/;"	f	lineno:254	type:Object function(Object, Object)
multiplyVector	raytrace.js	/^    multiplyVector : function(v, w) {$/;"	f	lineno:259	type:Object function(any, any)
multiplyScalar	raytrace.js	/^    multiplyScalar : function(v, w) {$/;"	f	lineno:263	type:Object function(<undefined | null | Object>, number)
toString	raytrace.js	/^    toString : function () {$/;"	f	lineno:267	type:string function()
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:272	type:any
initialize	raytrace.js	/^    initialize : function(pos, dir) {$/;"	f	lineno:280	type:void function(any, any)
toString	raytrace.js	/^    toString : function () {$/;"	f	lineno:285	type:string function()
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:290	type:any
initialize	raytrace.js	/^    initialize : function() {$/;"	f	lineno:301	type:void function()
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:313	type:any
initialize	raytrace.js	/^    initialize : function() {$/;"	f	lineno:327	type:void function()
getColor	raytrace.js	/^    getColor: function(u, v){$/;"	f	lineno:331	type:void function(any, any)
wrapUp	raytrace.js	/^    wrapUp: function(t){$/;"	f	lineno:335	type:number function(any)
toString	raytrace.js	/^    toString : function () {$/;"	f	lineno:342	type:string function()
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:347	type:any
initialize	raytrace.js	/^        initialize : function(color, reflection, refraction, transparency, gloss) {$/;"	f	lineno:354	type:void function(any, any, any, any, any)
getColor	raytrace.js	/^        getColor: function(u, v){$/;"	f	lineno:362	type:void function(any, any)
toString	raytrace.js	/^        toString : function () {$/;"	f	lineno:366	type:string function()
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:372	type:any
initialize	raytrace.js	/^        initialize : function(colorEven, colorOdd, reflection, transparency, gloss, density) {$/;"	f	lineno:383	type:void function(any, any, any, any, any, any)
getColor	raytrace.js	/^        getColor: function(u, v){$/;"	f	lineno:393	type:void function(any, any)
toString	raytrace.js	/^        toString : function () {$/;"	f	lineno:402	type:string function()
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:408	type:any
initialize	raytrace.js	/^    initialize : function(pos, radius, material) {$/;"	f	lineno:415	type:void function(any, any, any)
intersect	raytrace.js	/^    intersect: function(ray){$/;"	f	lineno:421	type:Object function(Object)
toString	raytrace.js	/^    toString : function () {$/;"	f	lineno:453	type:string function()
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:458	type:any
initialize	raytrace.js	/^    initialize : function(pos, d, material) {$/;"	f	lineno:467	type:void function(any, any, any)
intersect	raytrace.js	/^    intersect: function(ray){$/;"	f	lineno:473	type:Object function(Object)
toString	raytrace.js	/^    toString : function () {$/;"	f	lineno:507	type:string function()
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:512	type:any
initialize	raytrace.js	/^    initialize : function() {$/;"	f	lineno:526	type:void function()
toString	raytrace.js	/^    toString : function () {$/;"	f	lineno:530	type:string function()
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:535	type:any
initialize	raytrace.js	/^    initialize : function(pos, lookAt, up) {$/;"	f	lineno:547	type:void function(any, any, any)
getRay	raytrace.js	/^    getRay: function(vx, vy){$/;"	f	lineno:555	type:Object function(number, number)
toString	raytrace.js	/^    toString : function () {$/;"	f	lineno:574	type:string function()
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:579	type:any
initialize	raytrace.js	/^    initialize : function(color, ambience) {$/;"	f	lineno:588	type:void function(any, any)
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:594	type:Object
initialize	raytrace.js	/^    initialize: function(options){$/;"	f	lineno:602	type:void function(any)
setPixel	raytrace.js	/^    setPixel: function(x, y, color){$/;"	f	lineno:621	type:void function(number, number, Object)
renderScene	raytrace.js	/^    renderScene: function(scene, canvas){$/;"	f	lineno:637	type:void function(Object, null)
getPixelColor	raytrace.js	/^    getPixelColor: function(ray, scene){$/;"	f	lineno:666	type:Object function(Object, Object)
testIntersection	raytrace.js	/^    testIntersection: function(ray, scene, exclude){$/;"	f	lineno:675	type:Object function(Object, Object, <undefined | null | Object>)
getReflectionRay	raytrace.js	/^    getReflectionRay: function(P,N,V){$/;"	f	lineno:695	type:Object function(Object, <undefined | null | Object>, any)
rayTrace	raytrace.js	/^    rayTrace: function(info, ray, scene, depth){$/;"	f	lineno:704	type:Object function(Object, Object, Object, number)
renderScene	raytrace.js	/^function renderScene(){$/;"	f	lineno:806	type:void function()
