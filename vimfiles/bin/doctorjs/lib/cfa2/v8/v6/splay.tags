!_TAG_FILE_FORMAT	2	/extended format/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Patrick Walton	/pwalton@mozilla.com/
!_TAG_PROGRAM_NAME	jsctags	//
!_TAG_PROGRAM_URL	http://github.com/pcwalton/jsctags	/GitHub repository/
!_TAG_PROGRAM_VERSION	0.1	//
kSplayTreeSize	splay.js	/^var kSplayTreeSize = 8000;$/;"	v	lineno:37	type:number
kSplayTreeModifications	splay.js	/^var kSplayTreeModifications = 80;$/;"	v	lineno:38	type:number
kSplayTreePayloadDepth	splay.js	/^var kSplayTreePayloadDepth = 5;$/;"	v	lineno:39	type:number
splayTree	splay.js	/^var splayTree = null;$/;"	v	lineno:41	type:<null | SplayTree>
GeneratePayloadTree	splay.js	/^function GeneratePayloadTree(depth, tag) {$/;"	f	lineno:44	type:Object function(number, string)
GenerateKey	splay.js	/^function GenerateKey() {$/;"	f	lineno:59	type:number function()
InsertNewNode	splay.js	/^function InsertNewNode() {$/;"	f	lineno:66	type:number function()
SplaySetup	splay.js	/^function SplaySetup() {$/;"	f	lineno:79	type:void function()
SplayTearDown	splay.js	/^function SplayTearDown() {$/;"	f	lineno:85	type:void function()
SplayRun	splay.js	/^function SplayRun() {$/;"	f	lineno:107	type:void function()
SplayTree	splay.js	/^function SplayTree() {$/;"	f	lineno:126	type:SplayTree function()
isEmpty	splay.js	/^SplayTree.prototype.isEmpty = function() {$/;"	f	lineno:142	type:boolean function()
insert	splay.js	/^SplayTree.prototype.insert = function(key, value) {$/;"	f	lineno:155	type:void function(number, Object)
remove	splay.js	/^SplayTree.prototype.remove = function(key) {$/;"	f	lineno:188	type:<null | Node> function(number)
find	splay.js	/^SplayTree.prototype.find = function(key) {$/;"	f	lineno:219	type:<null | Node> function(number)
findMax	splay.js	/^SplayTree.prototype.findMax = function(opt_startNode) {$/;"	f	lineno:231	type:<null | Node> function(<null | Node>)
findGreatestLessThan	splay.js	/^SplayTree.prototype.findGreatestLessThan = function(key) {$/;"	f	lineno:247	type:<null | Node> function(number)
exportKeys	splay.js	/^SplayTree.prototype.exportKeys = function() {$/;"	f	lineno:269	type:Array[number] function()
%anonymous_function	splay.js	/^    this.root_.traverse_(function(node) { result.push(node.key); });$/;"	f	lineno:272	type:void function(Node)
splay_	splay.js	/^SplayTree.prototype.splay_ = function(key) {$/;"	f	lineno:288	type:void function(number)
Node	splay.js	/^SplayTree.Node = function(key, value) {$/;"	f	lineno:356	type:Node function(<number | null>, <null | Object>)
traverse_	splay.js	/^SplayTree.Node.prototype.traverse_ = function(f) {$/;"	f	lineno:381	type:void function(void function(Node))
