!_TAG_FILE_FORMAT	2	/extended format/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Patrick Walton	/pwalton@mozilla.com/
!_TAG_PROGRAM_NAME	jsctags	//
!_TAG_PROGRAM_URL	http://github.com/pcwalton/jsctags	/GitHub repository/
!_TAG_PROGRAM_VERSION	0.1	//
dbits	crypto.js	/^var dbits;$/;"	v	lineno:36	type:number
BI_DB	crypto.js	/^var BI_DB;$/;"	v	lineno:37	type:number
BI_DM	crypto.js	/^var BI_DM;$/;"	v	lineno:38	type:number
BI_DV	crypto.js	/^var BI_DV;$/;"	v	lineno:39	type:number
BI_FP	crypto.js	/^var BI_FP;$/;"	v	lineno:41	type:number
BI_FV	crypto.js	/^var BI_FV;$/;"	v	lineno:42	type:number
BI_F1	crypto.js	/^var BI_F1;$/;"	v	lineno:43	type:number
BI_F2	crypto.js	/^var BI_F2;$/;"	v	lineno:44	type:number
canary	crypto.js	/^var canary = 0xdeadbeefcafe;$/;"	v	lineno:47	type:number
j_lm	crypto.js	/^var j_lm = ((canary&0xffffff)==0xefcafe);$/;"	v	lineno:48	type:boolean
BigInteger	crypto.js	/^function BigInteger(a,b,c) {$/;"	f	lineno:51	type:BigInteger function(<number | string | null | Array[number]>, <number | undefined>, <undefined | SecureRandom>)
nbi	crypto.js	/^function nbi() { return new BigInteger(null); }$/;"	f	lineno:60	type:BigInteger function()
am1	crypto.js	/^function am1(i,x,w,j,c,n) {$/;"	f	lineno:70	type:number function(any, any, any, any, any, any)
am2	crypto.js	/^function am2(i,x,w,j,c,n) {$/;"	f	lineno:84	type:number function(any, any, any, any, any, any)
am3	crypto.js	/^function am3(i,x,w,j,c,n) {$/;"	f	lineno:101	type:number function(number, number, <undefined | null | BigInteger>, <number | undefined>, number, <number | undefined>)
am4	crypto.js	/^function am4(i,x,w,j,c,n) {$/;"	f	lineno:119	type:number function(any, any, any, any, any, any)
setupEngine	crypto.js	/^setupEngine = function(fn, bits) {$/;"	f	lineno:140	type:void function(number function(number, number, <undefined | null | BigInteger>, <number | undefined>, number, <number | undefined>), number)
BI_RM	crypto.js	/^var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";$/;"	v	lineno:156	type:string
BI_RC	crypto.js	/^var BI_RC = new Array();$/;"	v	lineno:157	type:Array[number]
rr	crypto.js	/^var rr,vv;$/;"	v	lineno:158	type:number
vv	crypto.js	/^var rr,vv;$/;"	v	lineno:158	type:number
int2char	crypto.js	/^function int2char(n) { return BI_RM.charAt(n); }$/;"	f	lineno:166	type:string function(number)
intAt	crypto.js	/^function intAt(s,i) {$/;"	f	lineno:167	type:number function(<number | string | null | Array[number]>, <number | undefined>)
bnpCopyTo	crypto.js	/^function bnpCopyTo(r) {$/;"	f	lineno:173	type:void function(<null | BigInteger>)
bnpFromInt	crypto.js	/^function bnpFromInt(x) {$/;"	f	lineno:183	type:void function(number)
nbv	crypto.js	/^function nbv(i) { var r = nbi(); r.fromInt(i); return r; }$/;"	f	lineno:193	type:BigInteger function(number)
bnpFromString	crypto.js	/^function bnpFromString(s,b) {$/;"	f	lineno:196	type:void function(<number | string | null | Array[number]>, <number | undefined>)
bnpClamp	crypto.js	/^function bnpClamp() {$/;"	f	lineno:236	type:void function()
bnToString	crypto.js	/^function bnToString(b) {$/;"	f	lineno:243	type:string function(number)
bnNegate	crypto.js	/^function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }$/;"	f	lineno:274	type:BigInteger function()
bnAbs	crypto.js	/^function bnAbs() { return (this.s<0)?this.negate():this; }$/;"	f	lineno:277	type:BigInteger function()
bnCompareTo	crypto.js	/^function bnCompareTo(a) {$/;"	f	lineno:280	type:number function(<undefined | null | BigInteger>)
nbits	crypto.js	/^function nbits(x) {$/;"	f	lineno:294	type:number function(number)
bnBitLength	crypto.js	/^function bnBitLength() {$/;"	f	lineno:305	type:number function()
bnpDLShiftTo	crypto.js	/^function bnpDLShiftTo(n,r) {$/;"	f	lineno:312	type:void function(<number | undefined>, <null | BigInteger>)
bnpDRShiftTo	crypto.js	/^function bnpDRShiftTo(n,r) {$/;"	f	lineno:323	type:void function(<number | undefined>, <undefined | null | BigInteger>)
bnpLShiftTo	crypto.js	/^function bnpLShiftTo(n,r) {$/;"	f	lineno:332	type:void function(number, <null | BigInteger>)
bnpRShiftTo	crypto.js	/^function bnpRShiftTo(n,r) {$/;"	f	lineno:351	type:void function(number, <null | BigInteger>)
bnpSubTo	crypto.js	/^function bnpSubTo(a,r) {$/;"	f	lineno:371	type:void function(<undefined | null | BigInteger>, <null | BigInteger>)
bnpMultiplyTo	crypto.js	/^function bnpMultiplyTo(a,r) {$/;"	f	lineno:408	type:void function(BigInteger, BigInteger)
bnpSquareTo	crypto.js	/^function bnpSquareTo(r) {$/;"	f	lineno:424	type:void function(BigInteger)
bnpDivRemTo	crypto.js	/^function bnpDivRemTo(m,q,r) {$/;"	f	lineno:445	type:void function(<null | BigInteger>, <null | BigInteger>, <null | BigInteger>)
bnMod	crypto.js	/^function bnMod(a) {$/;"	f	lineno:498	type:BigInteger function(<null | BigInteger>)
Classic	crypto.js	/^function Classic(m) { this.m = m; }$/;"	f	lineno:506	type:Classic function(<null | BigInteger>)
cConvert	crypto.js	/^function cConvert(x) {$/;"	f	lineno:507	type:BigInteger function(BigInteger)
cRevert	crypto.js	/^function cRevert(x) { return x; }$/;"	f	lineno:511	type:BigInteger function(BigInteger)
cReduce	crypto.js	/^function cReduce(x) { x.divRemTo(this.m,null,x); }$/;"	f	lineno:512	type:void function(BigInteger)
cMulTo	crypto.js	/^function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }$/;"	f	lineno:513	type:void function(BigInteger, BigInteger, BigInteger)
cSqrTo	crypto.js	/^function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }$/;"	f	lineno:514	type:void function(BigInteger, BigInteger)
bnpInvDigit	crypto.js	/^function bnpInvDigit() {$/;"	f	lineno:532	type:number function()
Montgomery	crypto.js	/^function Montgomery(m) {$/;"	f	lineno:549	type:Montgomery function(<null | BigInteger>)
montConvert	crypto.js	/^function montConvert(x) {$/;"	f	lineno:559	type:BigInteger function(BigInteger)
montRevert	crypto.js	/^function montRevert(x) {$/;"	f	lineno:568	type:BigInteger function(BigInteger)
montReduce	crypto.js	/^function montReduce(x) {$/;"	f	lineno:576	type:void function(BigInteger)
montSqrTo	crypto.js	/^function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }$/;"	f	lineno:596	type:void function(BigInteger, BigInteger)
montMulTo	crypto.js	/^function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }$/;"	f	lineno:599	type:void function(BigInteger, BigInteger, BigInteger)
bnpIsEven	crypto.js	/^function bnpIsEven() {$/;"	f	lineno:608	type:boolean function()
bnpExp	crypto.js	/^function bnpExp(e,z) {$/;"	f	lineno:614	type:BigInteger function(number, <Classic | Montgomery>)
bnModPowInt	crypto.js	/^function bnModPowInt(e,m) {$/;"	f	lineno:627	type:BigInteger function(number, <null | BigInteger>)
bnClone	crypto.js	/^function bnClone() { var r = nbi(); this.copyTo(r); return r; }$/;"	f	lineno:669	type:BigInteger function()
bnIntValue	crypto.js	/^function bnIntValue() {$/;"	f	lineno:672	type:number function()
bnByteValue	crypto.js	/^function bnByteValue() {$/;"	f	lineno:685	type:<number | undefined> function()
bnShortValue	crypto.js	/^function bnShortValue() {$/;"	f	lineno:691	type:<number | undefined> function()
bnpChunkSize	crypto.js	/^function bnpChunkSize(r) { return Math.floor(Math.LN2*BI_DB\/Math.log(r)); }$/;"	f	lineno:697	type:number function(<number | undefined>)
bnSigNum	crypto.js	/^function bnSigNum() {$/;"	f	lineno:700	type:number function()
bnpToRadix	crypto.js	/^function bnpToRadix(b) {$/;"	f	lineno:708	type:string function(number)
bnpFromRadix	crypto.js	/^function bnpFromRadix(s,b) {$/;"	f	lineno:723	type:void function(<number | string | null | Array[number]>, <number | undefined>)
bnpFromNumber	crypto.js	/^function bnpFromNumber(a,b,c) {$/;"	f	lineno:750	type:void function(<number | string | null | Array[number]>, <number | undefined | SecureRandom>, <undefined | SecureRandom>)
bnToByteArray	crypto.js	/^function bnToByteArray() {$/;"	f	lineno:776	type:Array[number] function()
bnEquals	crypto.js	/^function bnEquals(a) { return(this.compareTo(a)==0); }$/;"	f	lineno:801	type:boolean function(any)
bnMin	crypto.js	/^function bnMin(a) { return(this.compareTo(a)<0)?this:a; }$/;"	f	lineno:802	type:Object function(any)
bnMax	crypto.js	/^function bnMax(a) { return(this.compareTo(a)>0)?this:a; }$/;"	f	lineno:803	type:Object function(any)
bnpBitwiseTo	crypto.js	/^function bnpBitwiseTo(a,op,r) {$/;"	f	lineno:806	type:void function(BigInteger, number function(number, number), BigInteger)
op_and	crypto.js	/^function op_and(x,y) { return x&y; }$/;"	f	lineno:827	type:number function(any, any)
bnAnd	crypto.js	/^function bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }$/;"	f	lineno:828	type:BigInteger function(any)
op_or	crypto.js	/^function op_or(x,y) { return x|y; }$/;"	f	lineno:831	type:number function(number, number)
bnOr	crypto.js	/^function bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }$/;"	f	lineno:832	type:BigInteger function(any)
op_xor	crypto.js	/^function op_xor(x,y) { return x^y; }$/;"	f	lineno:835	type:number function(any, any)
bnXor	crypto.js	/^function bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }$/;"	f	lineno:836	type:BigInteger function(any)
op_andnot	crypto.js	/^function op_andnot(x,y) { return x&~y; }$/;"	f	lineno:839	type:number function(any, any)
bnAndNot	crypto.js	/^function bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }$/;"	f	lineno:840	type:BigInteger function(any)
bnNot	crypto.js	/^function bnNot() {$/;"	f	lineno:843	type:BigInteger function()
bnShiftLeft	crypto.js	/^function bnShiftLeft(n) {$/;"	f	lineno:855	type:BigInteger function(number)
bnShiftRight	crypto.js	/^function bnShiftRight(n) {$/;"	f	lineno:862	type:BigInteger function(number)
lbit	crypto.js	/^function lbit(x) {$/;"	f	lineno:869	type:number function(number)
bnGetLowestSetBit	crypto.js	/^function bnGetLowestSetBit() {$/;"	f	lineno:881	type:number function()
cbit	crypto.js	/^function cbit(x) {$/;"	f	lineno:890	type:number function(number)
bnBitCount	crypto.js	/^function bnBitCount() {$/;"	f	lineno:897	type:number function()
bnTestBit	crypto.js	/^function bnTestBit(n) {$/;"	f	lineno:904	type:boolean function(number)
bnpChangeBit	crypto.js	/^function bnpChangeBit(n,op) {$/;"	f	lineno:912	type:BigInteger function(any, any)
bnSetBit	crypto.js	/^function bnSetBit(n) { return this.changeBit(n,op_or); }$/;"	f	lineno:919	type:any function(any)
bnClearBit	crypto.js	/^function bnClearBit(n) { return this.changeBit(n,op_andnot); }$/;"	f	lineno:922	type:any function(any)
bnFlipBit	crypto.js	/^function bnFlipBit(n) { return this.changeBit(n,op_xor); }$/;"	f	lineno:925	type:any function(any)
bnpAddTo	crypto.js	/^function bnpAddTo(a,r) {$/;"	f	lineno:928	type:void function(<null | BigInteger | Object>, BigInteger)
bnAdd	crypto.js	/^function bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }$/;"	f	lineno:964	type:BigInteger function(<null | BigInteger>)
bnSubtract	crypto.js	/^function bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }$/;"	f	lineno:967	type:BigInteger function(BigInteger)
bnMultiply	crypto.js	/^function bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }$/;"	f	lineno:970	type:BigInteger function(BigInteger)
bnDivide	crypto.js	/^function bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }$/;"	f	lineno:973	type:BigInteger function(<null | BigInteger>)
bnRemainder	crypto.js	/^function bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }$/;"	f	lineno:976	type:BigInteger function(any)
bnDivideAndRemainder	crypto.js	/^function bnDivideAndRemainder(a) {$/;"	f	lineno:979	type:Array[BigInteger] function(any)
bnpDMultiply	crypto.js	/^function bnpDMultiply(n) {$/;"	f	lineno:986	type:void function(number)
bnpDAddOffset	crypto.js	/^function bnpDAddOffset(n,w) {$/;"	f	lineno:994	type:void function(number, number)
NullExp	crypto.js	/^function NullExp() {}$/;"	f	lineno:1006	type:NullExp function()
nNop	crypto.js	/^function nNop(x) { return x; }$/;"	f	lineno:1007	type:any function(any)
nMulTo	crypto.js	/^function nMulTo(x,y,r) { x.multiplyTo(y,r); }$/;"	f	lineno:1008	type:void function(any, any, any)
nSqrTo	crypto.js	/^function nSqrTo(x,r) { x.squareTo(r); }$/;"	f	lineno:1009	type:void function(any, any)
bnPow	crypto.js	/^function bnPow(e) { return this.exp(e,new NullExp()); }$/;"	f	lineno:1017	type:any function(any)
bnpMultiplyLowerTo	crypto.js	/^function bnpMultiplyLowerTo(a,n,r) {$/;"	f	lineno:1021	type:void function(<undefined | BigInteger>, number, <undefined | BigInteger>)
bnpMultiplyUpperTo	crypto.js	/^function bnpMultiplyUpperTo(a,n,r) {$/;"	f	lineno:1036	type:void function(<undefined | BigInteger>, number, <undefined | BigInteger>)
Barrett	crypto.js	/^function Barrett(m) {$/;"	f	lineno:1050	type:Barrett function(<null | BigInteger>)
barrettConvert	crypto.js	/^function barrettConvert(x) {$/;"	f	lineno:1059	type:BigInteger function(BigInteger)
barrettRevert	crypto.js	/^function barrettRevert(x) { return x; }$/;"	f	lineno:1065	type:BigInteger function(BigInteger)
barrettReduce	crypto.js	/^function barrettReduce(x) {$/;"	f	lineno:1068	type:void function(BigInteger)
barrettSqrTo	crypto.js	/^function barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }$/;"	f	lineno:1079	type:void function(BigInteger, BigInteger)
barrettMulTo	crypto.js	/^function barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }$/;"	f	lineno:1082	type:void function(BigInteger, BigInteger, BigInteger)
bnModPow	crypto.js	/^function bnModPow(e,m) {$/;"	f	lineno:1091	type:BigInteger function(<null | BigInteger>, <null | BigInteger>)
bnGCD	crypto.js	/^function bnGCD(a) {$/;"	f	lineno:1151	type:BigInteger function(BigInteger)
bnpModInt	crypto.js	/^function bnpModInt(n) {$/;"	f	lineno:1179	type:number function(number)
bnModInverse	crypto.js	/^function bnModInverse(m) {$/;"	f	lineno:1190	type:BigInteger function(BigInteger)
lowprimes	crypto.js	/^var lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];$/;"	v	lineno:1231	type:Array[number]
lplim	crypto.js	/^var lplim = (1<<26)\/lowprimes[lowprimes.length-1];$/;"	v	lineno:1232	type:number
bnIsProbablePrime	crypto.js	/^function bnIsProbablePrime(t) {$/;"	f	lineno:1235	type:boolean function(<number | undefined | SecureRandom>)
bnpMillerRabin	crypto.js	/^function bnpMillerRabin(t) {$/;"	f	lineno:1255	type:boolean function(<number | undefined | SecureRandom>)
Arcfour	crypto.js	/^function Arcfour() {$/;"	f	lineno:1338	type:Arcfour function()
ARC4init	crypto.js	/^function ARC4init(key) {$/;"	f	lineno:1345	type:void function(Array[number])
ARC4next	crypto.js	/^function ARC4next() {$/;"	f	lineno:1360	type:number function()
prng_newstate	crypto.js	/^function prng_newstate() {$/;"	f	lineno:1374	type:Arcfour function()
rng_psize	crypto.js	/^var rng_psize = 256;$/;"	v	lineno:1380	type:number
rng_state	crypto.js	/^var rng_state;$/;"	v	lineno:1387	type:Arcfour
rng_pool	crypto.js	/^var rng_pool;$/;"	v	lineno:1388	type:Array[number]
rng_pptr	crypto.js	/^var rng_pptr;$/;"	v	lineno:1389	type:number
rng_seed_int	crypto.js	/^function rng_seed_int(x) {$/;"	f	lineno:1392	type:void function(number)
rng_seed_time	crypto.js	/^function rng_seed_time() {$/;"	f	lineno:1401	type:void function()
t	crypto.js	/^  var t;$/;"	v	lineno:1411	type:number
rng_get_byte	crypto.js	/^function rng_get_byte() {$/;"	f	lineno:1423	type:number function()
rng_get_bytes	crypto.js	/^function rng_get_bytes(ba) {$/;"	f	lineno:1437	type:void function(Array[number])
SecureRandom	crypto.js	/^function SecureRandom() {}$/;"	f	lineno:1442	type:SecureRandom function()
parseBigInt	crypto.js	/^function parseBigInt(str,r) {$/;"	f	lineno:1448	type:BigInteger function(<string | null>, number)
linebrk	crypto.js	/^function linebrk(s,n) {$/;"	f	lineno:1452	type:string function(any, any)
byte2Hex	crypto.js	/^function byte2Hex(b) {$/;"	f	lineno:1462	type:string function(any)
pkcs1pad2	crypto.js	/^function pkcs1pad2(s,n) {$/;"	f	lineno:1470	type:<null | BigInteger> function(string, number)
RSAKey	crypto.js	/^function RSAKey() {$/;"	f	lineno:1492	type:RSAKey function()
RSASetPublic	crypto.js	/^function RSASetPublic(N,E) {$/;"	f	lineno:1504	type:void function(string, string)
RSADoPublic	crypto.js	/^function RSADoPublic(x) {$/;"	f	lineno:1514	type:BigInteger function(<null | BigInteger>)
RSAEncrypt	crypto.js	/^function RSAEncrypt(text) {$/;"	f	lineno:1519	type:<string | null> function(string)
pkcs1unpad2	crypto.js	/^function pkcs1unpad2(d,n) {$/;"	f	lineno:1544	type:<string | null> function(BigInteger, number)
RSASetPrivate	crypto.js	/^function RSASetPrivate(N,E,D) {$/;"	f	lineno:1560	type:void function(any, any, any)
RSASetPrivateEx	crypto.js	/^function RSASetPrivateEx(N,E,D,P,Q,DP,DQ,C) {$/;"	f	lineno:1571	type:void function(string, string, string, string, string, string, string, string)
RSAGenerate	crypto.js	/^function RSAGenerate(B,E) {$/;"	f	lineno:1587	type:void function(any, any)
RSADoPrivate	crypto.js	/^function RSADoPrivate(x) {$/;"	f	lineno:1621	type:BigInteger function(BigInteger)
RSADecrypt	crypto.js	/^function RSADecrypt(ctext) {$/;"	f	lineno:1636	type:<string | null> function(<string | null>)
TEXT	crypto.js	/^var TEXT = "The quick brown fox jumped over the extremely lazy frog! " +$/;"	v	lineno:1672	type:string
encrypted	crypto.js	/^var encrypted;$/;"	v	lineno:1674	type:<string | null>
encrypt	crypto.js	/^function encrypt() {$/;"	f	lineno:1676	type:void function()
decrypt	crypto.js	/^function decrypt() {$/;"	f	lineno:1683	type:void function()
