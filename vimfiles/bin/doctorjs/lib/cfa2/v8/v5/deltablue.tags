!_TAG_FILE_FORMAT	2	/extended format/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Patrick Walton	/pwalton@mozilla.com/
!_TAG_PROGRAM_NAME	jsctags	//
!_TAG_PROGRAM_URL	http://github.com/pcwalton/jsctags	/GitHub repository/
!_TAG_PROGRAM_VERSION	0.1	//
BinaryConstraint	deltablue.js	/^function BinaryConstraint(var1, var2, strength) {$/;"	f	lineno:336	type:void function(<null | Variable>, <null | Variable>, Strength)
Constraint	deltablue.js	/^function Constraint(strength) {$/;"	f	lineno:148	type:void function(Strength)
Direction	deltablue.js	/^var Direction = new Object();$/;"	v	lineno:327	type:Object
EditConstraint	deltablue.js	/^function EditConstraint(v, str) {$/;"	f	lineno:306	type:EditConstraint function(<null | Variable>, Strength)
EqualityConstraint	deltablue.js	/^function EqualityConstraint(var1, var2, strength) {$/;"	f	lineno:509	type:EqualityConstraint function(null, Variable, Strength)
Inheriter	deltablue.js	/^  function Inheriter() { }$/;"	f	lineno:45	type:Inheriter function()
OrderedCollection	deltablue.js	/^function OrderedCollection() {$/;"	f	lineno:51	type:OrderedCollection function()
Plan	deltablue.js	/^function Plan() {$/;"	f	lineno:752	type:Plan function()
Planner	deltablue.js	/^function Planner() {$/;"	f	lineno:565	type:Planner function()
ScaleConstraint	deltablue.js	/^function ScaleConstraint(src, scale, offset, dest, strength) {$/;"	f	lineno:450	type:ScaleConstraint function(<null | Variable>, Variable, Variable, <null | Variable>, Strength)
StayConstraint	deltablue.js	/^function StayConstraint(v, str) {$/;"	f	lineno:288	type:StayConstraint function(<null | Variable>, Strength)
Strength	deltablue.js	/^function Strength(strengthValue, name) {$/;"	f	lineno:96	type:Strength function(number, string)
UnaryConstraint	deltablue.js	/^function UnaryConstraint(v, strength) {$/;"	f	lineno:207	type:void function(<null | Variable>, Strength)
Variable	deltablue.js	/^function Variable(name, initialValue) {$/;"	f	lineno:532	type:Variable function(string, <number | undefined>)
add	deltablue.js	/^OrderedCollection.prototype.add = function (elm) {$/;"	f	lineno:55	type:void function(<undefined | null | Variable | Constraint>)
addConstraint	deltablue.js	/^Constraint.prototype.addConstraint = function () {$/;"	f	lineno:155	type:void function()
addConstraint	deltablue.js	/^Plan.prototype.addConstraint = function (c) {$/;"	f	lineno:756	type:void function(<undefined | null | Variable | Constraint>)
addConstraint	deltablue.js	/^Variable.prototype.addConstraint = function (c) {$/;"	f	lineno:546	type:void function(Constraint)
addConstraintsConsumingTo	deltablue.js	/^Planner.prototype.addConstraintsConsumingTo = function (v, coll) {$/;"	f	lineno:733	type:void function(<undefined | null | Variable>, OrderedCollection)
addPropagate	deltablue.js	/^Planner.prototype.addPropagate = function (c, mark) {$/;"	f	lineno:686	type:boolean function(<undefined | null | Variable | Constraint>, number)
addToGraph	deltablue.js	/^BinaryConstraint.prototype.addToGraph = function () {$/;"	f	lineno:376	type:void function()
addToGraph	deltablue.js	/^ScaleConstraint.prototype.addToGraph = function () {$/;"	f	lineno:462	type:void function()
addToGraph	deltablue.js	/^UnaryConstraint.prototype.addToGraph = function () {$/;"	f	lineno:219	type:void function()
at	deltablue.js	/^OrderedCollection.prototype.at = function (index) {$/;"	f	lineno:59	type:<undefined | null | Variable | Constraint> function(number)
chainTest	deltablue.js	/^function chainTest(n) {$/;"	f	lineno:792	type:void function(number)
change	deltablue.js	/^function change(v, newValue) {$/;"	f	lineno:857	type:void function(<null | Variable>, number)
chooseMethod	deltablue.js	/^BinaryConstraint.prototype.chooseMethod = function (mark) {$/;"	f	lineno:351	type:void function(number)
chooseMethod	deltablue.js	/^UnaryConstraint.prototype.chooseMethod = function (mark) {$/;"	f	lineno:228	type:void function(number)
constraintAt	deltablue.js	/^Plan.prototype.constraintAt = function (index) {$/;"	f	lineno:764	type:<undefined | null | Variable | Constraint> function(number)
deltaBlue	deltablue.js	/^function deltaBlue() {$/;"	f	lineno:872	type:void function()
destroyConstraint	deltablue.js	/^Constraint.prototype.destroyConstraint = function () {$/;"	f	lineno:185	type:void function()
execute	deltablue.js	/^EditConstraint.prototype.execute = function () {$/;"	f	lineno:319	type:void function()
execute	deltablue.js	/^EqualityConstraint.prototype.execute = function () {$/;"	f	lineno:518	type:void function()
execute	deltablue.js	/^Plan.prototype.execute = function () {$/;"	f	lineno:768	type:void function()
execute	deltablue.js	/^ScaleConstraint.prototype.execute = function () {$/;"	f	lineno:482	type:void function()
execute	deltablue.js	/^StayConstraint.prototype.execute = function () {$/;"	f	lineno:294	type:void function()
extractPlanFromConstraints	deltablue.js	/^Planner.prototype.extractPlanFromConstraints = function (constraints) {$/;"	f	lineno:662	type:Plan function(OrderedCollection)
incrementalAdd	deltablue.js	/^Planner.prototype.incrementalAdd = function (c) {$/;"	f	lineno:583	type:void function(<undefined | null | Variable | Constraint>)
incrementalRemove	deltablue.js	/^Planner.prototype.incrementalRemove = function (c) {$/;"	f	lineno:601	type:void function(<undefined | null | Variable | Constraint>)
inheritsFrom	deltablue.js	/^Object.prototype.inheritsFrom = function (shuper) {$/;"	f	lineno:44	type:void function(<void function(Strength) | void function(<null | Variable>, Strength) | void function(<null | Variable>, <null | Variable>, Strength)>)
input	deltablue.js	/^BinaryConstraint.prototype.input = function () {$/;"	f	lineno:399	type:<undefined | null | Variable> function()
inputsKnown	deltablue.js	/^BinaryConstraint.prototype.inputsKnown = function (mark) {$/;"	f	lineno:429	type:boolean function(number)
inputsKnown	deltablue.js	/^UnaryConstraint.prototype.inputsKnown = function () {$/;"	f	lineno:269	type:boolean function()
isInput	deltablue.js	/^Constraint.prototype.isInput = function () {$/;"	f	lineno:195	type:boolean function()
isInput	deltablue.js	/^EditConstraint.prototype.isInput = function () {$/;"	f	lineno:315	type:boolean function()
isSatisfied	deltablue.js	/^BinaryConstraint.prototype.isSatisfied = function () {$/;"	f	lineno:385	type:boolean function()
isSatisfied	deltablue.js	/^UnaryConstraint.prototype.isSatisfied = function () {$/;"	f	lineno:236	type:<boolean | undefined> function()
makePlan	deltablue.js	/^Planner.prototype.makePlan = function (sources) {$/;"	f	lineno:643	type:Plan function(OrderedCollection)
markInputs	deltablue.js	/^BinaryConstraint.prototype.markInputs = function (mark) {$/;"	f	lineno:392	type:void function(number)
markInputs	deltablue.js	/^ScaleConstraint.prototype.markInputs = function (mark) {$/;"	f	lineno:474	type:void function(number)
markInputs	deltablue.js	/^UnaryConstraint.prototype.markInputs = function (mark) {$/;"	f	lineno:240	type:void function(number)
markUnsatisfied	deltablue.js	/^BinaryConstraint.prototype.markUnsatisfied = function () {$/;"	f	lineno:425	type:void function()
markUnsatisfied	deltablue.js	/^UnaryConstraint.prototype.markUnsatisfied = function () {$/;"	f	lineno:265	type:void function()
newMark	deltablue.js	/^Planner.prototype.newMark = function () {$/;"	f	lineno:620	type:number function()
nextWeaker	deltablue.js	/^Strength.prototype.nextWeaker = function () {$/;"	f	lineno:117	type:Strength function()
output	deltablue.js	/^BinaryConstraint.prototype.output = function () {$/;"	f	lineno:406	type:<undefined | null | Variable> function()
output	deltablue.js	/^UnaryConstraint.prototype.output = function () {$/;"	f	lineno:247	type:<undefined | null | Variable> function()
planner	deltablue.js	/^var planner = null;$/;"	v	lineno:870	type:<null | Planner>
projectionTest	deltablue.js	/^function projectionTest(n) {$/;"	f	lineno:826	type:void function(number)
recalculate	deltablue.js	/^BinaryConstraint.prototype.recalculate = function () {$/;"	f	lineno:415	type:void function()
recalculate	deltablue.js	/^ScaleConstraint.prototype.recalculate = function () {$/;"	f	lineno:495	type:void function()
recalculate	deltablue.js	/^UnaryConstraint.prototype.recalculate = function () {$/;"	f	lineno:256	type:void function()
remove	deltablue.js	/^OrderedCollection.prototype.remove = function (elm) {$/;"	f	lineno:71	type:void function(<undefined | null | Variable | Constraint>)
removeConstraint	deltablue.js	/^Variable.prototype.removeConstraint = function (c) {$/;"	f	lineno:553	type:void function(<undefined | null | Variable | Constraint>)
removeFirst	deltablue.js	/^OrderedCollection.prototype.removeFirst = function () {$/;"	f	lineno:67	type:<undefined | null | Variable | Constraint> function()
removeFromGraph	deltablue.js	/^BinaryConstraint.prototype.removeFromGraph = function () {$/;"	f	lineno:434	type:void function()
removeFromGraph	deltablue.js	/^ScaleConstraint.prototype.removeFromGraph = function () {$/;"	f	lineno:468	type:void function()
removeFromGraph	deltablue.js	/^UnaryConstraint.prototype.removeFromGraph = function () {$/;"	f	lineno:273	type:void function()
removePropagateFrom	deltablue.js	/^Planner.prototype.removePropagateFrom = function (out) {$/;"	f	lineno:707	type:OrderedCollection function(<undefined | null | Variable>)
satisfy	deltablue.js	/^Constraint.prototype.satisfy = function (mark) {$/;"	f	lineno:167	type:<undefined | null | Variable | Constraint> function(number)
size	deltablue.js	/^OrderedCollection.prototype.size = function () {$/;"	f	lineno:63	type:number function()
size	deltablue.js	/^Plan.prototype.size = function () {$/;"	f	lineno:760	type:number function()
stronger	deltablue.js	/^Strength.stronger = function (s1, s2) {$/;"	f	lineno:101	type:boolean function(<undefined | Strength>, <undefined | Strength>)
strongest	deltablue.js	/^Strength.strongest = function (s1, s2) {$/;"	f	lineno:113	type:any function(any, any)
weaker	deltablue.js	/^Strength.weaker = function (s1, s2) {$/;"	f	lineno:105	type:boolean function(<undefined | Strength>, <undefined | Strength>)
weakestOf	deltablue.js	/^Strength.weakestOf = function (s1, s2) {$/;"	f	lineno:109	type:<undefined | Strength> function(<undefined | Strength>, <undefined | Strength>)
