!_TAG_FILE_FORMAT	2	/extended format/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Patrick Walton	/pwalton@mozilla.com/
!_TAG_PROGRAM_NAME	jsctags	//
!_TAG_PROGRAM_URL	http://github.com/pcwalton/jsctags	/GitHub repository/
!_TAG_PROGRAM_VERSION	0.1	//
%anonymous_function	raytrace.js	/^    return function() {$/;"	f	lineno:30	type:undefined function()
Class	raytrace.js	/^var Class = {$/;"	v	lineno:28	type:Object
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:187	type:any
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:214	type:any
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:278	type:any
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:296	type:any
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:319	type:any
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:353	type:any
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:378	type:any
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:414	type:any
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:439	type:any
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:489	type:any
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:543	type:any
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:566	type:any
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:610	type:any
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:625	type:Object
Flog	raytrace.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:69	type:any
add	raytrace.js	/^    add : function(c1, c2){$/;"	f	lineno:89	type:Object function(Object, Object)
add	raytrace.js	/^    add : function(v, w) {$/;"	f	lineno:256	type:Object function(Object, Object)
addScalar	raytrace.js	/^    addScalar: function(c1, s){$/;"	f	lineno:99	type:Object function(Object, number)
blend	raytrace.js	/^    blend: function(c1, c2, w){$/;"	f	lineno:162	type:Object function(Object, Object, any)
brightness	raytrace.js	/^    brightness : function() {$/;"	f	lineno:171	type:number function()
checkNumber	raytrace.js	/^var checkNumber;$/;"	v	lineno:13	type:number
copy	raytrace.js	/^    copy: function(vector){$/;"	f	lineno:230	type:void function(any)
create	raytrace.js	/^  create: function() {$/;"	f	lineno:29	type:undefined function() function()
cross	raytrace.js	/^    cross : function(w) {$/;"	f	lineno:245	type:Object function(any)
distance	raytrace.js	/^    distance : function(color) {$/;"	f	lineno:157	type:number function(any)
divideFactor	raytrace.js	/^    divideFactor : function(c1, f) {$/;"	f	lineno:141	type:Object function(any, any)
dot	raytrace.js	/^    dot : function(w) {$/;"	f	lineno:252	type:number function(<undefined | null | Object>)
extend	raytrace.js	/^Object.extend = function(destination, source) {$/;"	f	lineno:37	type:Object function(Object, Object)
getColor	raytrace.js	/^        getColor: function(u, v){$/;"	f	lineno:368	type:any function(any, any)
getColor	raytrace.js	/^        getColor: function(u, v){$/;"	f	lineno:399	type:any function(any, any)
getColor	raytrace.js	/^    getColor: function(u, v){$/;"	f	lineno:337	type:void function(any, any)
getIntensity	raytrace.js	/^    getIntensity: function(distance){$/;"	f	lineno:203	type:number function(any)
getPixelColor	raytrace.js	/^    getPixelColor: function(ray, scene){$/;"	f	lineno:697	type:Object function(Object, Object)
getRay	raytrace.js	/^    getRay: function(vx, vy){$/;"	f	lineno:586	type:Object function(number, number)
getReflectionRay	raytrace.js	/^    getReflectionRay: function(P,N,V){$/;"	f	lineno:726	type:Object function(Object, <undefined | null | Object>, any)
initialize	raytrace.js	/^        initialize : function(color, reflection, refraction, transparency, gloss) {$/;"	f	lineno:360	type:void function(any, any, any, any, any)
initialize	raytrace.js	/^        initialize : function(colorEven, colorOdd, reflection, transparency, gloss, density) {$/;"	f	lineno:389	type:void function(any, any, any, any, any, any)
initialize	raytrace.js	/^    initialize : function() {$/;"	f	lineno:307	type:void function()
initialize	raytrace.js	/^    initialize : function() {$/;"	f	lineno:333	type:void function()
initialize	raytrace.js	/^    initialize : function() {$/;"	f	lineno:424	type:void function()
initialize	raytrace.js	/^    initialize : function() {$/;"	f	lineno:557	type:void function()
initialize	raytrace.js	/^    initialize : function(color, ambience) {$/;"	f	lineno:619	type:void function(any, any)
initialize	raytrace.js	/^    initialize : function(pos, color, intensity) {$/;"	f	lineno:197	type:void function(any, any, any)
initialize	raytrace.js	/^    initialize : function(pos, d, material) {$/;"	f	lineno:498	type:void function(any, any, any)
initialize	raytrace.js	/^    initialize : function(pos, dir) {$/;"	f	lineno:286	type:void function(any, any)
initialize	raytrace.js	/^    initialize : function(pos, lookAt, up) {$/;"	f	lineno:578	type:void function(any, any, any)
initialize	raytrace.js	/^    initialize : function(pos, radius, material) {$/;"	f	lineno:446	type:void function(any, any, any)
initialize	raytrace.js	/^    initialize : function(r, g, b) {$/;"	f	lineno:79	type:void function(any, any, any)
initialize	raytrace.js	/^    initialize : function(x, y, z) {$/;"	f	lineno:224	type:void function(any, any, any)
initialize	raytrace.js	/^    initialize: function(options){$/;"	f	lineno:633	type:void function(any)
intersect	raytrace.js	/^    intersect: function(ray){$/;"	f	lineno:452	type:Object function(Object)
intersect	raytrace.js	/^    intersect: function(ray){$/;"	f	lineno:504	type:Object function(Object)
limit	raytrace.js	/^    limit: function(){$/;"	f	lineno:151	type:void function()
magnitude	raytrace.js	/^    magnitude : function() {$/;"	f	lineno:241	type:number function()
multiply	raytrace.js	/^    multiply : function(c1, c2) {$/;"	f	lineno:121	type:Object function(Object, Object)
multiplyScalar	raytrace.js	/^    multiplyScalar : function(c1, f) {$/;"	f	lineno:131	type:Object function(<undefined | null | Object>, number)
multiplyScalar	raytrace.js	/^    multiplyScalar : function(v, w) {$/;"	f	lineno:269	type:Object function(<undefined | null | Object>, number)
multiplyVector	raytrace.js	/^    multiplyVector : function(v, w) {$/;"	f	lineno:265	type:Object function(any, any)
normalize	raytrace.js	/^    normalize : function() {$/;"	f	lineno:236	type:Object function()
rayTrace	raytrace.js	/^    rayTrace: function(info, ray, scene, depth){$/;"	f	lineno:735	type:Object function(Object, Object, Object, number)
renderScene	raytrace.js	/^    renderScene: function(scene, canvas){$/;"	f	lineno:668	type:void function(Object, null)
renderScene	raytrace.js	/^function renderScene(){$/;"	f	lineno:837	type:void function()
setPixel	raytrace.js	/^    setPixel: function(x, y, color){$/;"	f	lineno:652	type:void function(number, number, Object)
subtract	raytrace.js	/^    subtract : function(v, w) {$/;"	f	lineno:260	type:Object function(Object, Object)
subtract	raytrace.js	/^    subtract: function(c1, c2){$/;"	f	lineno:111	type:Object function(Object, Object)
testIntersection	raytrace.js	/^    testIntersection: function(ray, scene, exclude){$/;"	f	lineno:706	type:Object function(Object, Object, <undefined | null | Object>)
toString	raytrace.js	/^        toString : function () {$/;"	f	lineno:372	type:string function()
toString	raytrace.js	/^        toString : function () {$/;"	f	lineno:408	type:string function()
toString	raytrace.js	/^    toString : function () {$/;"	f	lineno:178	type:string function()
toString	raytrace.js	/^    toString : function () {$/;"	f	lineno:209	type:string function()
toString	raytrace.js	/^    toString : function () {$/;"	f	lineno:273	type:string function()
toString	raytrace.js	/^    toString : function () {$/;"	f	lineno:291	type:string function()
toString	raytrace.js	/^    toString : function () {$/;"	f	lineno:348	type:string function()
toString	raytrace.js	/^    toString : function () {$/;"	f	lineno:434	type:string function()
toString	raytrace.js	/^    toString : function () {$/;"	f	lineno:484	type:string function()
toString	raytrace.js	/^    toString : function () {$/;"	f	lineno:538	type:string function()
toString	raytrace.js	/^    toString : function () {$/;"	f	lineno:561	type:string function()
toString	raytrace.js	/^    toString : function () {$/;"	f	lineno:605	type:string function()
wrapUp	raytrace.js	/^    wrapUp: function(t){$/;"	f	lineno:341	type:number function(any)
