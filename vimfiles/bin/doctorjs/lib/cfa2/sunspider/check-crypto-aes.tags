!_TAG_FILE_FORMAT	2	/extended format/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Patrick Walton	/pwalton@mozilla.com/
!_TAG_PROGRAM_NAME	jsctags	//
!_TAG_PROGRAM_URL	http://github.com/pcwalton/jsctags	/GitHub repository/
!_TAG_PROGRAM_VERSION	0.1	//
Cipher	check-crypto-aes.js	/^function Cipher(input, w) {    \/\/ main Cipher function [§5.1]$/;"	f	lineno:13	type:Array[number] function(Array[number], Array[Array[number]])
SubBytes	check-crypto-aes.js	/^function SubBytes(s, Nb) {    \/\/ apply SBox to state S [§5.1.1]$/;"	f	lineno:39	type:Array[Array[number]] function(Array[Array[number]], number)
ShiftRows	check-crypto-aes.js	/^function ShiftRows(s, Nb) {    \/\/ shift row r of state S left by r bytes [§5.1.2]$/;"	f	lineno:47	type:Array[Array[number]] function(Array[Array[number]], number)
MixColumns	check-crypto-aes.js	/^function MixColumns(s, Nb) {   \/\/ combine bytes of each col of state S [§5.1.3]$/;"	f	lineno:57	type:Array[Array[number]] function(Array[Array[number]], number)
AddRoundKey	check-crypto-aes.js	/^function AddRoundKey(state, w, rnd, Nb) {  \/\/ xor Round Key into state S [§5.1.4]$/;"	f	lineno:75	type:Array[Array[number]] function(Array[Array[number]], Array[Array[number]], number, number)
KeyExpansion	check-crypto-aes.js	/^function KeyExpansion(key) {  \/\/ generate Key Schedule (byte-array Nr+1 x Nb) from Key [§5.2]$/;"	f	lineno:83	type:Array[Array[number]] function(Array[number])
SubWord	check-crypto-aes.js	/^function SubWord(w) {    \/\/ apply SBox to 4-byte word w$/;"	f	lineno:111	type:Array[number] function(Array[number])
RotWord	check-crypto-aes.js	/^function RotWord(w) {    \/\/ rotate 4-byte word w left by one byte$/;"	f	lineno:116	type:Array[number] function(Array[number])
Sbox	check-crypto-aes.js	/^var Sbox =  [0x63,0x7c,0x77,0x7b,0xf2,0x6b,0x6f,0xc5,0x30,0x01,0x67,0x2b,0xfe,0xd7,0xab,0x76,$/;"	v	lineno:124	type:Array[number]
Rcon	check-crypto-aes.js	/^var Rcon = [ [0x00, 0x00, 0x00, 0x00],$/;"	v	lineno:142	type:Array[Array[number]]
AESEncryptCtr	check-crypto-aes.js	/^function AESEncryptCtr(plaintext, password, nBits) {$/;"	f	lineno:164	type:string function(string, string, number)
AESDecryptCtr	check-crypto-aes.js	/^function AESDecryptCtr(ciphertext, password, nBits) {$/;"	f	lineno:230	type:string function(string, string, number)
escCtrlChars	check-crypto-aes.js	/^function escCtrlChars(str) {  \/\/ escape control chars which might cause problems handling ciphertext$/;"	f	lineno:278	type:string function(string)
%anonymous_function	check-crypto-aes.js	/^  return str.replace(\/[\\0\\t\\n\\v\\f\\r\\xa0'"!-]\/g, function(c) { return '!' + c.charCodeAt(0) + '!'; });$/;"	f	lineno:279	type:string function(any)
unescCtrlChars	check-crypto-aes.js	/^function unescCtrlChars(str) {  \/\/ unescape potentially problematic control characters$/;"	f	lineno:282	type:string function(<string | undefined>)
%anonymous_function	check-crypto-aes.js	/^  return str.replace(\/!\\d\\d?\\d?!\/g, function(c) { return String.fromCharCode(c.slice(1,-1)); });$/;"	f	lineno:283	type:string function(any)
b64	check-crypto-aes.js	/^var b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/=";$/;"	v	lineno:290	type:string
encodeBase64	check-crypto-aes.js	/^function encodeBase64(str) {  \/\/ http:\/\/tools.ietf.org\/html\/rfc4648$/;"	f	lineno:292	type:string function(any)
decodeBase64	check-crypto-aes.js	/^function decodeBase64(str) {$/;"	f	lineno:320	type:string function(any)
encodeUTF8	check-crypto-aes.js	/^function encodeUTF8(str) {  \/\/ encode multi-byte string into utf-8 multiple single-byte characters $/;"	f	lineno:343	type:any function(any)
%anonymous_function	check-crypto-aes.js	/^      function(c) { $/;"	f	lineno:346	type:string function(any)
%anonymous_function	check-crypto-aes.js	/^      function(c) { $/;"	f	lineno:352	type:string function(any)
decodeUTF8	check-crypto-aes.js	/^function decodeUTF8(str) {  \/\/ decode utf-8 encoded string back into multi-byte characters$/;"	f	lineno:359	type:string function(string)
%anonymous_function	check-crypto-aes.js	/^      function(c) { $/;"	f	lineno:362	type:string function(any)
%anonymous_function	check-crypto-aes.js	/^      function(c) { $/;"	f	lineno:368	type:string function(any)
byteArrayToHexStr	check-crypto-aes.js	/^function byteArrayToHexStr(b) {  \/\/ convert byte array to hex string for displaying test vectors$/;"	f	lineno:376	type:string function(any)
plainText	check-crypto-aes.js	/^var plainText = "ROMEO: But, soft! what light through yonder window breaks?\\n\\$/;"	v	lineno:385	type:string
password	check-crypto-aes.js	/^Arise, fair sun, and kill the envious moon,\\n\\$/;"	v	lineno:387	type:string
cipherText	check-crypto-aes.js	/^That thou her maid art far more fair than she:\\n\\$/;"	v	lineno:389	type:string
decryptedText	check-crypto-aes.js	/^Be not her maid, since she is envious;\\n\\$/;"	v	lineno:390	type:string
