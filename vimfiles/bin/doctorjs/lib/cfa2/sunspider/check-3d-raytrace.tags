!_TAG_FILE_FORMAT	2	/extended format/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Patrick Walton	/pwalton@mozilla.com/
!_TAG_PROGRAM_NAME	jsctags	//
!_TAG_PROGRAM_URL	http://github.com/pcwalton/jsctags	/GitHub repository/
!_TAG_PROGRAM_VERSION	0.1	//
createVector	check-3d-raytrace.js	/^function createVector(x,y,z) {$/;"	f	lineno:26	type:Array[number] function(number, number, number)
sqrLengthVector	check-3d-raytrace.js	/^function sqrLengthVector(self) {$/;"	f	lineno:30	type:number function(any)
lengthVector	check-3d-raytrace.js	/^function lengthVector(self) {$/;"	f	lineno:34	type:number function(Array[number])
addVector	check-3d-raytrace.js	/^function addVector(self, v) {$/;"	f	lineno:38	type:<null | Array[number]> function(<null | Array[number]>, <null | Array[number]>)
subVector	check-3d-raytrace.js	/^function subVector(self, v) {$/;"	f	lineno:45	type:Array[number] function(Array[number], Array[number])
scaleVector	check-3d-raytrace.js	/^function scaleVector(self, scale) {$/;"	f	lineno:52	type:<null | Array[number]> function(<null | Array[number]>, <number | undefined>)
normaliseVector	check-3d-raytrace.js	/^function normaliseVector(self) {$/;"	f	lineno:59	type:Array[number] function(Array[number])
add	check-3d-raytrace.js	/^function add(v1, v2) {$/;"	f	lineno:67	type:Array[number] function(Array[number], Array[number])
sub	check-3d-raytrace.js	/^function sub(v1, v2) {$/;"	f	lineno:71	type:Array[number] function(Array[number], Array[number])
scalev	check-3d-raytrace.js	/^function scalev(v1, v2) {$/;"	f	lineno:75	type:Array[number] function(Array[number], <null | Array[number]>)
dot	check-3d-raytrace.js	/^function dot(v1, v2) {$/;"	f	lineno:79	type:number function(Array[number], Array[number])
scale	check-3d-raytrace.js	/^function scale(v, scale) {$/;"	f	lineno:83	type:Array[number] function(Array[number], <number | undefined | null>)
cross	check-3d-raytrace.js	/^function cross(v1, v2) {$/;"	f	lineno:87	type:Array[number] function(Array[number], Array[number])
normalise	check-3d-raytrace.js	/^function normalise(v) {$/;"	f	lineno:94	type:Array[number] function(Array[number])
transformMatrix	check-3d-raytrace.js	/^function transformMatrix(self, v) {$/;"	f	lineno:99	type:Array[number] function(Array[number], Array[number])
invertMatrix	check-3d-raytrace.js	/^function invertMatrix(self) {$/;"	f	lineno:107	type:Array[number] function(Array[number])
Triangle	check-3d-raytrace.js	/^function Triangle(p1, p2, p3) {$/;"	f	lineno:125	type:Triangle function(Array[number], Array[number], Array[number])
intersect	check-3d-raytrace.js	/^Triangle.prototype.intersect = function(orig, dir, near, far) {$/;"	f	lineno:160	type:<number | null> function(Array[number], Array[number], <number | undefined>, <number | undefined>)
Scene	check-3d-raytrace.js	/^function Scene(a_triangles) {$/;"	f	lineno:181	type:Scene function(Array[Triangle])
zero	check-3d-raytrace.js	/^var zero = new Array(0,0,0);$/;"	v	lineno:187	type:Array[number]
intersect	check-3d-raytrace.js	/^Scene.prototype.intersect = function(origin, dir, near, far) {$/;"	f	lineno:189	type:<null | Array[number]> function(Array[number], Array[number], <number | undefined>, <number | undefined>)
blocked	check-3d-raytrace.js	/^Scene.prototype.blocked = function(O, D, far) {$/;"	f	lineno:244	type:boolean function(Array[number], Array[number], number)
Camera	check-3d-raytrace.js	/^function Camera(origin, lookat, up) {$/;"	f	lineno:261	type:Camera function(Array[number], Array[number], Array[number])
generateRayPair	check-3d-raytrace.js	/^Camera.prototype.generateRayPair = function(y) {$/;"	f	lineno:283	type:Array[Object] function(number)
renderRows	check-3d-raytrace.js	/^function renderRows(camera, scene, pixels, width, height, starty, stopy) {$/;"	f	lineno:292	type:void function(Camera, Scene, Array[Array], number, number, number, number)
render	check-3d-raytrace.js	/^Camera.prototype.render = function(scene, pixels, width, height) {$/;"	f	lineno:305	type:void function(Scene, Array[Array], number, number)
raytraceScene	check-3d-raytrace.js	/^function raytraceScene()$/;"	f	lineno:313	type:Array[Array] function()
floorShader	check-3d-raytrace.js	/^    var floorShader = function(tri, pos, view) {$/;"	f	lineno:357	type:Array[number] function(<null | Triangle>, Array[number], Array[number])
arrayToCanvasCommands	check-3d-raytrace.js	/^function arrayToCanvasCommands(pixels)$/;"	f	lineno:405	type:string function(Array[Array])
