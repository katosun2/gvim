!_TAG_FILE_FORMAT	2	/extended format/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Patrick Walton	/pwalton@mozilla.com/
!_TAG_PROGRAM_NAME	jsctags	//
!_TAG_PROGRAM_URL	http://github.com/pcwalton/jsctags	/GitHub repository/
!_TAG_PROGRAM_VERSION	0.1	//
hexcase	check-crypto-sha1.js	/^var hexcase = 0;  \/* hex output format. 0 - lowercase; 1 - uppercase        *\/$/;"	v	lineno:14	type:number
b64pad	check-crypto-sha1.js	/^var b64pad  = ""; \/* base-64 pad character. "=" for strict RFC compliance   *\/$/;"	v	lineno:15	type:string
chrsz	check-crypto-sha1.js	/^var chrsz   = 8;  \/* bits per input character. 8 - ASCII; 16 - Unicode      *\/$/;"	v	lineno:16	type:number
hex_sha1	check-crypto-sha1.js	/^function hex_sha1(s){return binb2hex(core_sha1(str2binb(s),s.length * chrsz));}$/;"	f	lineno:22	type:string function(string)
b64_sha1	check-crypto-sha1.js	/^function b64_sha1(s){return binb2b64(core_sha1(str2binb(s),s.length * chrsz));}$/;"	f	lineno:23	type:string function(any)
str_sha1	check-crypto-sha1.js	/^function str_sha1(s){return binb2str(core_sha1(str2binb(s),s.length * chrsz));}$/;"	f	lineno:24	type:string function(any)
hex_hmac_sha1	check-crypto-sha1.js	/^function hex_hmac_sha1(key, data){ return binb2hex(core_hmac_sha1(key, data));}$/;"	f	lineno:25	type:string function(any, any)
b64_hmac_sha1	check-crypto-sha1.js	/^function b64_hmac_sha1(key, data){ return binb2b64(core_hmac_sha1(key, data));}$/;"	f	lineno:26	type:string function(any, any)
str_hmac_sha1	check-crypto-sha1.js	/^function str_hmac_sha1(key, data){ return binb2str(core_hmac_sha1(key, data));}$/;"	f	lineno:27	type:string function(any, any)
sha1_vm_test	check-crypto-sha1.js	/^function sha1_vm_test()$/;"	f	lineno:32	type:boolean function()
core_sha1	check-crypto-sha1.js	/^function core_sha1(x, len)$/;"	f	lineno:40	type:Array[number] function(Array[number], number)
sha1_ft	check-crypto-sha1.js	/^function sha1_ft(t, b, c, d)$/;"	f	lineno:88	type:number function(number, number, number, number)
sha1_kt	check-crypto-sha1.js	/^function sha1_kt(t)$/;"	f	lineno:99	type:number function(number)
core_hmac_sha1	check-crypto-sha1.js	/^function core_hmac_sha1(key, data)$/;"	f	lineno:108	type:Array[number] function(any, any)
safe_add	check-crypto-sha1.js	/^function safe_add(x, y)$/;"	f	lineno:128	type:number function(number, number)
rol	check-crypto-sha1.js	/^function rol(num, cnt)$/;"	f	lineno:138	type:number function(number, number)
str2binb	check-crypto-sha1.js	/^function str2binb(str)$/;"	f	lineno:147	type:Array[number] function(string)
binb2str	check-crypto-sha1.js	/^function binb2str(bin)$/;"	f	lineno:159	type:string function(Array[number])
binb2hex	check-crypto-sha1.js	/^function binb2hex(binarray)$/;"	f	lineno:171	type:string function(Array[number])
binb2b64	check-crypto-sha1.js	/^function binb2b64(binarray)$/;"	f	lineno:186	type:string function(Array[number])
plainText	check-crypto-sha1.js	/^var plainText = "Two households, both alike in dignity,\\n\\$/;"	v	lineno:205	type:string
i	check-crypto-sha1.js	/^From ancient grudge break to new mutiny,\\n\\$/;"	v	lineno:207	type:number
sha1Output	check-crypto-sha1.js	/^Whole misadventured piteous overthrows\\n\\$/;"	v	lineno:211	type:string
